ERROR: LoadError: BoundsError: attempt to access 205074-element Vector{Float64} at index [205075]
Stacktrace:
  [1] setindex!
    @ ./array.jl:969 [inlined]
  [2] predict_k!(score::Vector{Float64}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, θ::NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, F::NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}, sim_data::NamedTuple{(:AK, :DK, :LK, :TL, :ΩK, :Csim, :G, :reg_idx, :Y, :X, :logτ_m), Tuple{Vector{Int64}, Vector{Bool}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Float64}, Matrix{Float64}, Vector{Float64}}}; seed::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/model/simulate.jl:273
  [3] predict_k!
    @ /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/model/simulate.jl:232 [inlined]
  [4] kid_moments(S::Vector{Float64}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, θ::NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, F::NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}, kid_data::NamedTuple{(:AK, :DK, :LK, :TL, :ΩK, :Csim, :G, :reg_idx, :Y, :X, :logτ_m), Tuple{Vector{Int64}, Vector{Bool}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Float64}, Matrix{Float64}, Vector{Float64}}}; seed::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/stage5.jl:84
  [5] kid_moments
    @ /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/stage5.jl:82 [inlined]
  [6] obj_stage5(S::Vector{Float64}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, θ::NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, F::NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}, kid_data::NamedTuple{(:AK, :DK, :LK, :TL, :ΩK, :Csim, :G, :reg_idx, :Y, :X, :logτ_m), Tuple{Vector{Int64}, Vector{Bool}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Float64}, Matrix{Float64}, Vector{Float64}}}, kmoms0::NTuple{4, Vector{Float64}}; seed::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/stage5.jl:94
  [7] (::var"#122#123"{Int64, NTuple{4, Vector{Float64}}, Vector{Float64}, NamedTuple{(:AK, :DK, :LK, :TL, :ΩK, :Csim, :G, :reg_idx, :Y, :X, :logτ_m), Tuple{Vector{Int64}, Vector{Bool}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Int64}, Vector{Float64}, Matrix{Float64}, Vector{Float64}}}, NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}})(x::Vector{Float64})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/stage5.jl:17
  [8] value!!(obj::NonDifferentiable{Float64, Vector{Float64}}, x::Vector{Float64})
    @ NLSolversBase ~/.julia/packages/NLSolversBase/kavn7/src/interface.jl:9
  [9] initial_state(method::NelderMead{Optim.AffineSimplexer, Optim.AdaptiveParameters}, options::Optim.Options{Float64, Nothing}, d::NonDifferentiable{Float64, Vector{Float64}}, initial_x::Vector{Float64})
    @ Optim ~/.julia/packages/Optim/Adqv3/src/multivariate/solvers/zeroth_order/nelder_mead.jl:171
 [10] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/optimize.jl:36 [inlined]
 [11] optimize(f::Function, initial_x::Vector{Float64}, options::Optim.Options{Float64, Nothing}; inplace::Bool, autodiff::Symbol)
    @ Optim ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:122
 [12] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:119 [inlined]
 [13] stage5(x0::Vector{Float64}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, mod::NamedTuple{(:θ, :values, :F), Tuple{NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, NamedTuple{(:VW5, :pL5, :VH5, :VW4, :VH4, :pL4, :VW3, :VH3, :pL3, :pD3, :VW2, :VH2, :pL2, :pD2, :VW1, :VH1, :pL1, :pD1, :pF, :Cτ), Tuple{Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 7}, Array{Float64, 7}, Array{Float64, 8}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 5}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Vector{Float64}}}, NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}}}, dat::NamedTuple{(:edW, :edH, :tlength, :AW0, :AD, :κ, :legal), NTuple{7, Vector{Int64}}}, K::DataFrame; num_iter::Int64, show_trace::Bool, seed::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/stage5.jl:17
 [14] estimate_model(x4_0::Vector{Float64}, x5_0::Vector{Float64}, θ::NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, V::NamedTuple{(:VW5, :pL5, :VH5, :VW4, :VH4, :pL4, :VW3, :VH3, :pL3, :pD3, :VW2, :VH2, :pL2, :pD2, :VW1, :VH1, :pL1, :pD1, :pF, :Cτ), Tuple{Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 7}, Array{Float64, 7}, Array{Float64, 8}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 5}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Vector{Float64}}}, F::NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}, data::DataFrame, panel::DataFrame, kid_data::DataFrame; R::Int64, num_iter::Int64, show_trace::Bool, seed4::Int64, seed5::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/estimation.jl:18
 [15] bootstrap_pars(θ::NamedTuple{(:β, :α_C, :α_l, :γ_YW, :σ_L, :γ_YH, :ρ_ϵ, :σ_η, :αΓ_τWa, :αΓ_τHa, :α_ω, :σ_ω, :π_ω, :α_νH0, :α_νH1, :α_νd, :α_τ, :π_lc, :Cτ, :ρ, :σ_τ, :σ_F, :Λ_ϵ, :Π_ϵ, :Π_ω, :cprobs), Tuple{Float64, Float64, Float64, Matrix{Float64}, Float64, Matrix{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}, Matrix{Float64}, SparseMatrixCSC{Float64, Int64}, Vector{Float64}}}, θk::NamedTuple{(:γ_ψ0, :γ_ψ, :δW, :δH, :δk, :Γa, :σ_η, :γAP), Tuple{Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64}}, V::NamedTuple{(:VW5, :pL5, :VH5, :VW4, :VH4, :pL4, :VW3, :VH3, :pL3, :pD3, :VW2, :VH2, :pL2, :pD2, :VW1, :VH1, :pL1, :pD1, :pF, :Cτ), Tuple{Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 7}, Array{Float64, 7}, Array{Float64, 8}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 4}, Array{Float64, 5}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Array{Float64, 4}, Array{Float64, 3}, Array{Float64, 3}, Vector{Float64}}}, F::NamedTuple{(:β, :b, :A_W, :N_t, :A_d, :N_d, :N_κ, :κ_W, :κ_W_grid, :A_bar, :A, :A_grid, :N_a, :N_ϵ, :π_H, :N_ω, :ω_grid, :τ_R, :T_f, :τgrid, :N_τ, :N_c), Tuple{Float64, Float64, UnitRange{Int64}, Int64, StepRange{Int64, Int64}, Int64, Int64, Adjoint{Float64, Matrix{Float64}}, Vector{StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}, Int64}}, Int64, Vector{Int64}, LinRange{Float64, Int64}, Int64, Int64, Float64, Int64, LinRange{Float64, Int64}, Float64, Int64, Vector{Float64}, Int64, Int64}}, M::DataFrame, P::DataFrame, K::DataFrame, num_boot::Int64; R::Int64, num_iter::Int64, show_trace::Bool)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/BFM/src/estimation/bootstrap.jl:37
 [16] top-level scope
    @ /panfs/jay/groups/5/mullinsj/mullinsj/BFM/scripts/run_bootstrap.jl:25
in expression starting at /panfs/jay/groups/5/mullinsj/mullinsj/BFM/scripts/run_bootstrap.jl:25
Performing bootstrap trial 1
Performing bootstrap trial 2
Performing bootstrap trial 3
Performing bootstrap trial 4
Performing bootstrap trial 5
Performing bootstrap trial 6
Performing bootstrap trial 7
Performing bootstrap trial 8
Performing bootstrap trial 9
Performing bootstrap trial 10
Performing bootstrap trial 11
Performing bootstrap trial 12
Performing bootstrap trial 13
Performing bootstrap trial 14
Performing bootstrap trial 15
Performing bootstrap trial 16
Performing bootstrap trial 17
Performing bootstrap trial 18
Performing bootstrap trial 19
Performing bootstrap trial 20
